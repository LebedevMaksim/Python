# author: MLebedev
""" Практика по ООП #7

https://younglinux.info/oopython/operators

Напишите класс Snow по следующему описанию.

В конструкторе класса инициируется поле, содержащее количество снежинок, выраженное целым числом.

Класс включает методы перегрузки арифметических операторов: __add__() – сложение, __sub__() – вычитание,
__mul__() – умножение, __truediv__() – деление. В классе код этих методов должен выполнять увеличение или
уменьшение количества снежинок на число n или в n раз. Метод __truediv__() перегружает обычное (/),
а не целочисленное (//) деление. Однако пусть в методе происходит округление значения до целого числа.

Класс включает метод makeSnow(), который принимает сам объект и число снежинок в ряду, а возвращает строку
вида "*****\n*****\n*****…", где количество снежинок между '\n' равно переданному аргументу, а количество
рядов вычисляется, исходя из общего количества снежинок.

Вызов объекта класса Snow в нотации функции с одним аргументом, должен приводить к перезаписи значения поля,
в котором хранится количество снежинок, на переданное в качестве аргумента значение.

"""


class Snow:
    def __init__(self, count):
        self.count = count

    def __add__(self, other):
        self.count += other

    def __sub__(self, other):
        self.count -= other

    def __mul__(self, other):
        self.count *= other

    def __truediv__(self, other):
        self.count //= other

    def make_snow(self, row):
        s = ''
        while self.count > 0:
            if self.count >= row:
                s += '*' * row + '\n'
                self.count -= row
            else:
                s += '*' * self.count + '\n'
                self.count = 0
        return s


def main():
    snow = Snow(11)
    snow * 5
    snow + 4
    print(snow.make_snow(10))


if __name__ == '__main__':
    main()
